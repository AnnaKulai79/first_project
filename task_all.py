#  79. Школа вирішила замінити парти у трьох кабінетах. Кожна парта розрахована на двох учнів.
#  Враховуючи кількість учнів у кожному класі, надрукуйте найменшу можливу кількість парт, які
#  треба придбати. Програма повинна прочитати три цілих числа: кількість учнів в кожному з трьох
#  класів a , b та c відповідно.
# Вхідні дані:
#  20
#  21
#  22
#  Вихідні дані:
#  32
# print("Enter data: ")
# num1 = int(input())
# num2 = int(input())
# num3 = int(input())
# print("*" * 20)
# print(num1 // 2 + num1 % 2 + num2 // 2 + num2 % 2 + num3 // 2 + num3 % 2)


#  80. Дано п’ятизначне десяткове число. Побудуйте нове десяткове число за наступними правилами.
#  Необхідно обчислити два числа, з яких перше - це сума першої, третьої та п’ятої цифр і друге число 
# це сума другої і четвертої цифр введеного числа. Відповідь - це отримані два числа, які записуються
#  один за одним в одному рядку.
#  Вхідні дані:
#  12345
#  44444
#  11111
#  Вихідні дані:
#  96
#  128
#  32
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# print("Enter data: ")
# num = input()
# print(int(num[0]) + int(num[2]) + int(num[4]) , int(num[1]) + int(num[3]) , sep="")



#  81. Дано ціле число n. Виведіть наступне за ним парне число.
#  Вхідні дані:
#  7
#  10
#  11
#  Вихідні дані:
#  8
#  12
#  12
# Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# print("Enter data: ")
# num = int(input())
# print(num + 2 - num % 2)

#  82. Електронний годинник показує час в форматі h: mm: ss , тобто спочатку записується кількість годин
#  (число від 0 до 23, потім обов’язково двозначна кількість хвилин, потім обов’язково двозначна
#  кількість секунд. Кількість хвилин і секунд при необхідності доповнюються до двозначного числа
#  нулями. З початку доби минуло n секунд. Виведіть, що покаже годинник.
#  Вхідні дані:
#  3602
#  4556789
#  4568
#  Вихідні дані:
#  1:00:02
#  17:46:29
#  1:16:08
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# print("Enter data: ")
# num = int(input())
# print((num // 3600) % 24,str((num % 3600) // 60 + 100)[1:3] ,str((num % 3600) % 60 + 100)[1:3] ,sep=":")



#  83. Дано два моменти часу в межах однієї доби. Для кожного моменту вказано години, хвилини і
#  секунди. Відомо, що другий момент часу настав не раніше першого. Визначте скільки секунд
#  пройшло між двома моментами часу. Програма на вхід отримує шість цілих чисел в окремих рядках.
#  Перші три цілих числа відповідають годинам, хвилинам і секундам першого моменту, наступні три
#  числа відповідають другому моменту. Години задаються числом від 0 до 23 включно. Хвилини і
#  секунди - від 0 до 59.
#  Вхідні дані:
#  1
#  1
#  1
#  2
#  2
#  2
#  Вихідні дані:
#  3661
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# hour1 = int(input("Enter data: \n"))
# min1 = int(input())
# sek1 = int(input())
# hour2 = int(input())
# min2 = int(input())
# sek2 = int(input())
# print((hour2 * 3600 + min2 * 60 + sek2) - (hour1 * 3600 + min1 * 60 + sek1))


# 84. Равлик повзе по вертикальній жердині висотою h метрів, піднімаючись за день на a метрів, а за ніч
#  спускаючись на b метрів. На який день равлик доповзе до вершини жердини? Дані вводяться у
#  порядку h, a, b.
#  Вхідні дані:
#  10
#  3
#  2
#  Вихідні дані:
#  8
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# h = int(input("Enter data: \nh: "))
# a = int(input("a: "))
# b = int(input("b: "))
# print("\n", (h - a) // (a - b) + 2 ** int(bool((h - a) % (a - b))))


#  85. Дано чотиризначне число. Визначте, чи є його десятковий запис симетричним. Якщо число
#  симетричне, то виведіть 1 , інакше виведіть будь-яке інше ціле число. Число може мати менше
#  чотирьох знаків, тоді потрібно вважати, що його десятковий запис доповнюється зліва нулями.
#  Вхідні дані:
#  2002
#  Вихідні дані:
#  1
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num = int(input("Enter data: \n"))
# num1 = num // 1000 - num % 10
# num2 = (num // 10) % 10 - (num // 100) % 10 
# print(num1 + num2 + 1)
# str_num = input("Enter data: \n")
# str_num = str_num[::-1] + "0" * (4 - len(str_num))
# print(int(bool(str_num == str_num[::-1])))



#  86. Напишіть програму, яка зчитує два цілих числа a і b і виводить найбільше значення з них. Числа 
# цілі від 1 до 1000. При розв’язуванні задачі можна користуватися тільки цілочисельними
#  арифметичними операціями. Не можна користуватися розгалуженнями, циклами, функціями.
#  Вхідні дані:
#  8
#  5
#  Вихідні дані:
# 8
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num1 = int(input("Enter data: \n"))
# num2 = int(input())
# abs1 = int(bool(abs(num1 - num2) - (num1 - num2)))
# abs2 = int(bool(abs(num2 - num1) - (num2 - num1)))
# print(num1 * abs2 + num2 * abs1)

#  87. У цьому завданні необхідно перевірити, чи ділиться число a на число b без остачі і вивести YES або
#  NO . Використовувати можна тільки арифметичні операції, використання будь-яких видів
#  розгалужень, функцій заборонено.
#  Вхідні дані:
#  10
#  5
#  Вихідні дані:
#  YES
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num1 = int(input("Enter data: \n"))
# num2 = int(input())
# print("YES" * abs(int(bool(num1 - (num1 // num2) * num2)) - 1) + "NO" * int(bool((num1 % num2))))

#  88. Напишіть програму для розрахунку суми цифр у 4-цифровому цілому числі, яке вводиться
#  користувачем.
#  Вхідні дані:
#  4273
#  1221
#  3355
#  Вихідні дані:
#  16
#  6
#  16
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num = input("Enter data: \n")
# print(int(num[0]) + int(num[1]) + int(num[2]) + int(num[3]))

#  89. Напишіть програму для сортування трьох цілих чисел без використання умовних виразів і циклів.
#  Вхідні дані:
# Вихідні дані:
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num1 = input("Enter data: \n")
# num2 = input()
# num3 = input()
# number = [num1, num2, num3]
# number.sort()
# print(" ".join(number))

#  90. Необхідно перевезти n книг. Для транспортування можна використовувати коробки, які вміщають
#  m книг кожна. Порахуйте, яку кількість коробок необхідно використати для перевезення всіх книг за
#  один раз. Користувачем вводиться два цілих числа n і m, а програма виводить одне ціле число 
# мінімальну кількість коробок.
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# n = int(input("Enter data: \n"))
# m = int(input())
# print(round(n / m))

#  91. Напишіть програму, яка по даному числу n від 1 до 9 виводить на екран n пінгвінів. Зображення
#  одного пінгвіна має розмір 5 × 9 символів, між двома сусідніми пінгвінами також є порожній (з
#  пропусків) стовпець. Дозволяється вивести порожній стовпець після останнього пінгвіна. Для
#  спрощення малювання скопіюйте пінгвіна з прикладу в середовище розробки.
#  Вхідні дані:
#  Вихідні дані:
#  1
#  8
#  5
#  1 5 8
#  40
#  15
#  3
#  3
#     _~_       _~_       _~_
#    (o o)     (o o)     (o o)
#   /  V  \   /  V  \   /  V  \
#  /(  _  )\ /(  _  )\ /(  _  )\
#    ^^ ^^     ^^ ^^     ^^ ^^
# Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# count = int(input("Enter number of penguins(1-9): "))
# print("    _~_    " * count)
# print("   (o o)   " * count)
# print("  /  V  \  " * count)
# print(" /(  " + "  )\\  /(  ".join("1 2 3 4 5 6 7 8 9"[:2*count].split()) + "  )\\ ")
# print("   ^^ ^^   " * count)





#  92. В деякій школі заняття починаються о 9:00 . Тривалість уроку - 45 хвилин, після 1-го, 3-го, 5-го і т.
#  д. уроків перерва 5 хвилин, а після 2-го, 4-го, 6-го і т. д. - 15 хвилин. Вводиться номер уроку (число
#  від 1 до 10). Визначте, коли закінчується зазначений урок, а саме, виведіть два цілих числа: час
#  закінчення уроку в годинах і хвилинах.
#  Вхідні дані:
#  3
#  4
#  5
#  Вихідні дані:
#  11 35
#  12 25
#  13 25
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# number = int(input("Enter data: \n"))
# hour = 585 + 50 * (number // 2) + 60 * ((number - 1) // 2)
# print((hour // 60), ":", (hour % 60))


#  93. У годиннику сіла батарейка, і вони стали йти вдвічі повільніше. Коли на годиннику було x1 годин
#  y1 хвилин, правильний час був a1 годин b1 хвилин. Скільки часу буде насправді, коли годинник в
#  наступний раз покаже x2 годин y2 хвилин? Програма отримує на вхід числа x1, y1, a1, b1, x2,
#  y2 в зазначеному порядку. Всі числа цілі. Числа x1 , a1 , x2 - від 0 до 23, числа y1, b1, y2 - від 0
#  до 59. Виведіть два числа a2 і b2, що визначають скільки буде часу насправді, коли на годиннику
#  буде x2 годин y2 хвилин.
#  Вхідні дані:
#  12
#  34
#  10
#  34
#  12
#  35
#  Вихідні дані:
#  10 36
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# x1 = int(input("Enter data: \n"))
# y1 = int(input())
# a1 = int(input())
# b1 = int(input())
# x2 = int(input())
# y2 = int(input())
# diff = x1 * 60 + y1 - a1 * 60 - b1
# now = x2 * 60 + y2 - diff
# print((now // 60), ":", (now % 60))


#  94. Вводиться додатне дійсне число a . Виведіть його першу цифру після десяткового дробу. При
#  розв’язуванні цього завдання не можна користуватися умовною конструкцією і циклом.
# Вхідні дані:
#  4.65
#  12.06
#  12.46
#  Вихідні дані:
#  6
#  0
#  4
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num = float(input("Enter data: \n"))
# print(int((num * 10) % 10))

#  95. З початку доби минуло h годин, m хвилин, s секунд (0 < h < 12, 0 < m < 60 , 0 < s < 60 ). За
#  даними числами h, m, s визначте кут (в градусах), на який повернулаcь годинникова стрілка з
#  початку доби і виведіть його у вигляді дійсного числа. При розв’язуванні цього завдання не можна
#  користуватися умовними конструкціями і циклами.
#  Вхідні дані:
#  2
#  10
#  45
#  Вихідні дані:
#  65.375
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# hour1 = int(input("Enter data 0 < h < 12, 0 < m < 60 , 0 < s < 60: \n"))
# min1 = int(input())
# sek1 = int(input())
# print(30 * hour1 + (6 * min1) / 12 + (6 * sek1) / 720)

#  96. З початку доби годинникова стрілка повернулася на кут a градусів. Визначте на який кут
#  повернулась хвилинна стрілка з початку останньої години. Вхідні і вихідні дані - дійсні числа. При
#  розв’язуванні цього завдання не можна користуватися умовними конструкціями і циклами.
#  Вхідні дані:
#  190
#  170
#  370
#  Вихідні дані:
# 120.0
#  240.0
#  120.0
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num = int(input("Enter data: \n"))
# print(((num % 360) % 30) * 12)

#  97. Відомо, що батько старший за сина на n років, а син молодший батька в m разів. Визначте, скільки
#  років батькові і скільки років синові. Вхідні дані такі, що вік батька і вік сина є цілими числами.
#  Програма має вивести два числа, розділені пропуском: вік батька і вік сина.
#  Вхідні дані:
#  20
#  5
#  Вихідні дані:
#  25 5
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num_n = int(input("Enter data: \n"))
# num_m = int(input())
# print(int(num_n + num_n / (num_m - 1)), int(num_n / (num_m - 1)))


#  98. Дано прямокутник з розмірами a x b мм. Скільки квадратів зі стороною c мм можна відрізати від
#  нього? Вхідні дані такі, що сторони прямокутника і квадрата є цілими числами. Програма повинна
#  вивести одне число: кількість квадратів, які можна відрізати від даного прямокутника.
#  Вхідні дані:
#  5
#  4
#  2
#  Вихідні дані:
#  4
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num_a = int(input("Enter data: \n"))
# num_b = int(input())
# num_c = int(input())
# print((num_a // num_c) * (num_b // num_c))



#  99. У книзі на одній сторінці поміщається k рядків. Таким чином, на 1-й сторінці друкуються рядки з
#  1-го по k-й, на другій сторінці - з (k + 1)-й по (2 * k)-й і т. д. Напишіть програму, на вхід якої
#  подається кількість рядків k на сторінці і номер рядка n в тексті, по якому визначається номер
#  сторінки, на якій буде надрукований цей рядок, і порядковий номер цього рядка на сторінці.
# Вхідні дані:
#  20
#  25
#  Вихідні дані:
#  2 5
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num_a = int(input("Enter data: \n"))
# num_b = int(input())
# print((num_b // num_a + int(bool(num_b % num_a))), (num_b % num_a - num_a * int(bool(num_b % num_a) - 1)))


#  100. Потрібно підрахувати, на скільки раніше буде закінчуватися k-й урок, якщо всі перерви скоротити
#  на 5 хвилин. Вводиться одне натуральне число k, не більше 7. Необхідно вивести одне натуральне
#  число - час у хвилинах.
#  Вхідні дані:
#  2
#  3
#  5
#  Вихідні дані:
#  5
#  10
#  20
#  Розділ: ЗМІННІ І ТИПИ ДАНИХ | Рівень складності: ВИСОКИЙ
# num = int(input("Enter data: \n"))
# print(5 * (num-1))

# ********************************IF-ELSE************************************

# 174. Потрібно визначити, чи є даний рік високосним. Нагадаємо, що високосними роками вважаються ті
#  роки, порядковий номер яких або кратний 4, але при цьому не кратний 100, або кратний 400
#  (наприклад, 2000-й рік був високосним, а 2100-й буде невисокосним роком). Програма повинна
#  коректно працювати на числах 1900 ≤ n ≤ 3000. Виведіть Leap year. в разі, якщо рік є високосним,
#  і Ordinary year. у протилежному випадку.
#  Вхідні дані:
#  2001
#  2019
#  2020
#  Вихідні дані:
#  Ordinary year.
#  Ordinary year.
#  Leap year.
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
year = int(input("Enter data: \n"))
if (year % 4) == 0:
    if (year % 100) == 0:
        if (year % 400) == 0:
        



#  175. Дано чотирицифрове число. Визначити, чи дорівнює сума двох перших його цифр сумі двох його
#  останніх цифр.
#  Вхідні дані:
#  1423
#  2356
#  1102
#  Вихідні дані:
#  True
#  False
#  True
# Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  176. Дано чотирицифрове число. Замінити усі парні цифри числа на символ * і вивести число.
#  Вхідні дані:
#  2358
#  2227
#  1353
#  Вихідні дані:
#  *35*
#  ***7
#  1353
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  177. Дано натуральне число n (n ≤ 9999). З’ясувати, чи різні усі чотири цифри цього числа (з
#  урахуванням чотирьох цифр). Наприклад, в числі 5623 усі цифри різні, в числі 0012 - ні.
#  Вхідні дані:
#  1234
#  1981
#  Вихідні дані:
#  True
#  False
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  178. Робота світлофора для пішоходів запрограмована таким чином: на початку кожної години протягом
#  трьох хвилин горить зелений сигнал, потім протягом двох хвилин - червоний, а потім протягом
#  трьох хвилин - знову зелений і т. д. Дано ціле число t, що означає час в хвилинах, що минув від
#  початку чергової години. Визначити, сигнал якого кольору горить для пішоходів в цей момент.
#  Вхідні дані:
#  25
#  23
#  26
# Вихідні дані:
#  green
#  red
#  green
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  179. Робота світлофора для водіїв запрограмована таким чином: на початку кожної години протягом
#  трьох хвилин горить зелений сигнал, потім протягом однієї хвилини - жовтий, потім протягом двох
#  хвилин - червоний, а далі протягом трьох хвилин - знову зелений і т. д. Дано ціле число t, що
#  позначає час у хвилинах, що минув з початку чергової години. Визначити, сигнал якого кольору
#  горить для водіїв в цей момент.
#  Вхідні дані:
#  4
#  3
#  5
#  Вихідні дані:
#  yellow
#  green
#  red
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  180. Дано чотирицифрове число. Перевірте, чи є воно паліндромом. Паліндромом називається число,
#  слово або текст, які однаково читаються зліва направо і справа наліво. Наприклад, в нашому
#  випадку, числами-паліндромами будуть: 1221 , 4444 , 9119 і т. д. Приклади інших цілих чисел
# паліндромів, що не відносяться до розв’язуваної задачі: 2 , 454 , 33 , 91219 і т. д.
#  Вхідні дані:
#  4556
#  8118
#  Вихідні дані:
#  False
#  True
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
# 181. Дано однобайтове десяткове число (у межах 128-255 ). Перевірити, чи є двійкове подання
#  десяткового числа паліндромом, з урахуванням зберігання старших нулів у двійковому поданні.
#  Приклад таких десяткових чисел: 102 (у двійковому форматі 01100110 ), 129 (у двійковому вигляді
#  10000001 ) і т. д.
#  Вхідні дані:
#  231
#  255
#  178
#  Вихідні дані:
#  True
#  True
#  False
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  182. Напишіть програму, у якій користувач вводить значення поточної дати: день, місяць і рік (цілі
#  числа), а програма виводить завтрашню дату у форматі: дд.мм.рррр .
#  Вхідні дані:
#  28
#  2
#  2020
#  31
#  12
#  2017
#  5
#  7
#  2019
#  Вихідні дані:
#  29.2.2020
#  1.1.2018
#  6.7.2019
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  183. Напишіть програму, у якій користувач вводить значення поточної дати: день, місяць і рік (цілі
#  числа), а програма виводить вчорашню дату у форматі: дд.мм.рррр .
# Вхідні дані:
#  1
#  3
#  2018
#  1
#  1
#  2017
#  1
#  8
#  2018
#  Вихідні дані:
#  28.2.2018
#  31.12.2016
#  31.7.2018
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  184. Плитка шоколаду має вигляд прямокутника, розділеного на n × m частинок. Плитку шоколаду
#  можна один раз розламати по прямій на дві частини. Визначте, чи можна таким чином відламати
#  від плитки шоколаду шматок, що складається рівно з k частин. Програма отримує на вхід три числа:
#  n , m, k і повинна вивести Yes або No.
#  Вхідні дані:
#  5
#  7
#  1
#  Вихідні дані:
#  No
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  185. Дано три цілих числа. Упорядкуйте їх у порядку зростання. Програма повинна зчитувати три числа
#  a , b, c. Далі програма повинна змінювати їх значення так, щоб стали виконані умови a ≤ b ≤ c.
#  Резельтатом роботи програми буде виведення трійки чисел a, b, c в одному рядку. При
#  розв’язуванні задачі не можна використовувати додаткові змінні, тобто єдиною допустимою
#  операцією присвоювання є обмін значень двох змінних типу (a, b) = (b, a) .
#  Вхідні дані:
# 25
#  78
#  4
#  Вихідні дані:
#  4 25 78
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  186. Скласти програму знаходження добутку двох найменших з трьох різних цілих чисел.
#  Вхідні дані:
#  4
#  2
#  3
#  Вихідні дані:
#  6
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  187. Визначити максимальну і мінімальну цифри із введеного трицифрового числа і вивести цифри в
#  одному рядку через пропуск. Якщо цифри однакові, то вивести лише одну цифру.
#  Вхідні дані:
#  184
#  244
#  111
#  Вихідні дані:
#  8 1
#  4 2
#  1
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
# 188. Провайдер здійснює підключення до Інтернету за таким тарифним планом. Щомісячна абонентська
#  плата становить a гривень, і в цю абонентську плату включено b гігабайт трафіку. Невитрачені
#  гігабайти в кінці місяця «згорають». Якщо трафік перевищує b гігабайт, то кожен гігабайт трафіку
#  понад передплачених коштує с гривень. Відомо, що за минулий місяць один з абонентів витратив
#  d гігабайт трафіку. Визначте, у скільки обійшовся йому доступ в Інтернет в минулому місяці
#  (вважаючи, в тому числі і абонентську плату)? Вводяться чотири натуральних числа a , b , c, d. Всі
#  числа не перевищують 100. Виведіть одне число - суму (у гривнях), яку абонент повинен заплатити
#  за Інтернет.
#  Вхідні дані:
#  150
#  10
#  12
#  15
#  Вихідні дані:
#  210
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  189. Напишіть програму, у якій до введеного числа додаються написи: «гривень» (hryven ), «гривня»
#  ( hryvnia ), «гривні» ( hryvni ), згідно з правилами українського правопису.
#  Вхідні дані:
#  10001
#  516
#  2022
#  Вихідні дані:
#  10001 hryvnia
#  516 hryven
#  2022 hryvni
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  190. Напишіть програму, яка отримує на вхід три цілих числа, по одному числу в рядку, і виводить у три
#  рядки спочатку максимальне, потім мінімальне, після чого число, що залишилося. Вводитися
#  можуть повторювані числа. Використайте лише конструкції розгалуження, без обміну значеннями
#  між двома змінними.
# Вхідні дані:
#  2
#  55
#  14
#  Вихідні дані:
#  55
#  2
#  14
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  191. За багато років ув’язнення в’язень замку Іф зробив у стіні прямокутний отвір розміром d × e . Замок
#  Іф побудований із цегли, розміром a × b × c . Визначте, чи зможе в’язень викидати цеглини в море
#  через цей отвір (сторони цегли є паралельними сторонам отвору). Програма отримує на вхід числа
#  a , b, c, d, e і повинна вивести слово Yes або No.
#  Вхідні дані:
#  1
#  1
#  1
#  1
#  1
#  Вихідні дані:
#  Yes
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  192. Шаховий офіцер («слон») ходить по діагоналі. Дано дві різні клітинки шахової дошки, визначте, чи
#  може офіцер потрапити з першої клітини на другу за один хід. Програма отримує на вхід чотири
#  числа від 1 до 8 кожне, що задають номер стовпця і номер рядка спочатку для першої клітинки,
#  потім для другої клітинки. Програма повинна вивести Yes , якщо з першої клітинки ходом офіцера
#  можна потрапити в другу або No в іншому випадку.
#  Вхідні дані:
#  3
#  7
#  4
#  5
# Вихідні дані:
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  193. Шахова тура ходить по горизонталі або вертикалі. Дано дві різні клітинки шахової дошки, визначте,
#  чи може тура потрапити з першої клітинки на другу за один хід. Програма отримує на вхід чотири
#  числа від 1 до 8 кожне, що задають номер стовпця і номер рядка спочатку для першої клітинки,
#  потім для другої клітинки. Програма повинна вивести Yes, якщо з першої клітинки ходом тури
#  можна потрапити в другу або No в іншому випадку.
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  194. Шаховий кінь ходить літерою «Г» - на дві клітини по вертикалі в будь-якому напрямку і на одну
#  клітинку по горизонталі, або навпаки. Дано дві різні клітинки шахової дошки, визначте, чи може
#  кінь потрапити з першої клітинки на другу за один хід. Програма отримує на вхід чотири числа від
#  1 до 8 кожне, що задають номер стовпця і номер рядка спочатку для першої клітинки, потім для
#  другої клітинки. Програма повинна вивести Yes, якщо з першої клітинки ходом коня можна
#  потрапити в другу або No в іншому випадку.
#  Вхідні дані:
#  Вихідні дані:
#  No
#  2
#  2
#  4
#  4
#  No
#  5
#  5
#  3
#  6
#  Yes
# Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  195. Шаховий ферзь («королева») ходить по діагоналі, горизонталі або вертикалі. Дано дві різні клітинки
#  шахової дошки, визначте, чи може ферзь потрапити з першої клітинки на другу за один хід.
#  Програма отримує на вхід чотири числа від 1 до 8 кожне, що задають номер стовпця і номер рядка
#  спочатку для першої клітинки, потім для другої клітинки. Програма повинна вивести Yes , якщо з
#  першої клітинки ходом ферзя можна потрапити в другу або No в іншому випадку.
#  Вхідні дані:
#  3
#  6
#  8
#  1
#  Вихідні дані:
#  Yes
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  196. Шаховий король ходить по горизонталі, вертикалі і діагоналі, але тільки на 1 клітинку. Дано дві різні
#  клітинки шахової дошки, визначте, чи може король потрапити з першої клітинки на другу за один
#  хід. Програма отримує на вхід чотири числа від 1 до 8 кожне, що задають номер стовпця і номер
#  рядка спочатку для першої клітинки, потім для другої клітинки. Програма повинна вивести Yes ,
#  якщо з першої клітинки ходом короля можна потрапити в другу або No в іншому випадку.
#  Вхідні дані:
#  1
#  1
#  3
#  3
#  Вихідні дані:
#  No
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  197. Задані дві клітини шахової дошки. Якщо вони зафарбовані в один колір, то виведіть слово Yes , а
#  якщо в різні кольори - No. Програма отримує на вхід чотири числа від 1 до 8 кожне, що задають
#  номер стовпця і номер рядка спочатку для першої клітинки, потім для другої клітинки.
# Вхідні дані:
#  1
#  2
#  2
#  2
#  Вихідні дані:
#  No
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  198. Дано три сторони трикутника a, b, c. Визначте тип трикутника із заданими сторонами. Виведіть
#  одне з чотирьох слів: rectangular для прямокутного трикутника, acute для гострокутного
#  трикутника, obtuse для тупокутного трикутника або impossible , якщо трикутника з такими
#  сторонами не існує.
#  Вхідні дані:
#  4
#  5
#  6
#  Вихідні дані:
#  acute
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  199. Тетянка полюбляє їздити у громадському транспорті, а отримуючи квиток, відразу перевіряє, чи він
#  щасливий. Квиток вважається щасливим, якщо сума перших трьох цифр збігається з сумою останніх
#  трьох цифр номера квитка. Напишіть програму, яка перевірить рівність сум і виведе Happy , якщо
#  суми збігаються, і Ordinary , якщо суми різні. На вхід програмі подається рядок із шести цифр.
#  Вхідні дані:
#  156012
#  122005
#  045090
#  Вихідні дані:
# Ordinary
#  Happy
#  Happy
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  200. У будинку кілька під’їздів. У кожному під’їзді однакова кількість квартир. Квартири нумеруються
#  підряд, починаючи з одиниці. Чи може в деякому під’їзді перша квартира мати номер x, а остання 
# номер y? Вводяться два натуральних числа x і y (x ≤ y), що не перевищують 10000. Виведіть
#  слово Yes , якщо таке можливо, і No у протилежному випадку.
#  Вхідні дані:
#  111
#  15
#  Вихідні дані:
#  Yes
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
#  201. Для даного числа n < 100 необхідно закінчити фразу «На лузі пасеться… » одним з можливих
#  продовжень: n корів, n корова, n корови, правильно обравши закінчення. Вводиться натуральне
#  число. Програма повинна вивести введене число n і одне зі слів: koriv , korova або korovy . Між
#  числом і словом повинен стояти один пропуск.
#  Вхідні дані:
#  5
#  23
#  51
#  Вихідні дані:
#  5 koriv
#  23 korovy
#  51 korova
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ
# 202. Дано натуральне число n (0 ≤ n ≤ 1000), яке визначає період піврозпаду радіоактивних атомів,
#  визначений у роках. Необхідно вивести значення періоду піврозпаду, додавши до цього числа
#  відповідно «рік» ( rik ), «роки» ( roku ), «років» ( rokiv ).
#  Вхідні дані:
#  34
#  21
#  45
#  Вихідні дані:
#  34 roku
#  21 rik
#  45 rokiv
#  Розділ: РОЗГАЛУЖЕННЯ | Рівень складності: ВИСОКИЙ


# ***************************LOOP***********************************


#  270. Дано натуральне число n. Визначити, чи є воно автоморфним числом. Примітка. Автоморфне
#  число - число, квадрат якого рівний останнім розрядами квадрата цього числа: 5 - 25 , 6 - 36, 25 
# 625 .
#  Вхідні дані:
#  9376
#  26
#  Вихідні дані:
#  True
#  False
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  271. Дано натуральне число n. Надрукуйте всі n-значні непарні натуральні числа в порядку спадання.
#  Вхідні дані:
#  1
#  2
# Вихідні дані:
#  9 7 5 3 1
#  99 97 95 93 91 89 87 85 83 81 79 77 75 73 71 69 67 65 63 61 59 57 55 53 51 49 47 45 43 41 39 37 35 33 31 
# 29 27 25 23 21 19 17 15 13 11
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  272. Дано два натуральних числа a і b. Розробити програму для визначення найбільшого спільного
#  дільника (НСД) заданих чисел. Використайте 
# алгоритм Евкліда(https://bit.ly/2RVk4aM)
#  (https://bit.ly/2RVk4aM).
#  Вхідні дані:
#  8
#  2
#  Вихідні дані:
#  2
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  273. Напишіть програму, яка допомагає знайти число (НСК - найменше спільне кратне) двох чисел.
#  Програма повинна зчитувати два додатних цілих числа a і b (кожне число вводиться на окремому
#  рядку) і виводити найменше число, яке ділиться на обидва цих числа без залишку. НСК(a, b) = |ab|
#  / НСД(a, b) , де НСД(a, b) - найбільший спільний дільник чисел a, b .
#  Вхідні дані:
#  8
#  5
#  Вихідні дані:
#  40
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  274. Дано цілі числа a і b (a > b). Визначити результати цілочисельного ділення a на b і залишку від
#  ділення a на b, не використовуючи стандартні операції цілочисельного ділення і залишку від
#  ділення. Результати необхідно вивести в одному рядку, спочатку результат цілочисельного ділення, а
# потім залишок від ділення, розділені одним пропуском.
#  Вхідні дані:
#  16
#  5
#  Вихідні дані:
#  3 1
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  275. Дано натуральне число n. Визначити, чи є різниця його максимальної та мінімальної цифр парним
#  числом.
#  Вхідні дані:
#  2134389
#  1234
#  Вихідні дані:
#  True
#  False
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  276. Є монотонна послідовність, в якій кожне натуральне число k зустрічається рівно k разів: 1, 2, 2,
#  3, 3, 3, 4, 4, 4, 4, ... . За введеним натуральним числом n виведіть перші n членів цієї
#  послідовності.
#  Вхідні дані:
#  5
#  Вихідні дані:
#  1 2 2 3 3
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
# 277. Написати програму для обчислення суми цифр цілого числа n. Програма має враховувати, що на
#  вхід може подаватися ціле від’ємне число.
#  Вхідні дані:-123
#  1
#  412098
#  Вихідні дані:
#  6
#  1
#  24
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  278. Внесок на депозитний рахунок у банку становить d гривень. Щорічно він збільшується на r
#  відсотків, після чого дробова частина копійок відкидається. Визначте, через скільки років внесок
#  складе не менше b гривень. Програма отримує на вхід три натуральних числа: d, r, b.
#  Вхідні дані:
#  1000
#  14
#  2500
#  Вихідні дані:
#  7
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  279. Напишіть програму для отримання рядка Фібоначчі від 0 до n, де n - ціле число. Послідовність
#  Фібоначчі - це серія чисел 0, 1, 1, 2, 3, 5, 8, 13, 21, ... . Кожне наступне число знайдено
#  шляхом додавання двох номерів перед ним.
#  Вхідні дані:
#  50
#  Вихідні дані:
# 1 1 2 3 5 8 13 21 34
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  280. За введеним користувачем цілим числом n визначте n-е число Фібоначчі.
#  Вхідні дані:
#  9
#  3
#  5
#  Вихідні дані:
#  34
#  2
#  5
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  281. Дано натуральне число n. Визначте, яким за рахунком числом Фібоначчі воно є. Якщо n не є числом
#  Фібоначчі, виведіть значення -1 .
#  Вхідні дані:
#  11
#  8
#  Вихідні дані:-1
#  6
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  282. Послідовність складається з натуральних чисел і завершується числом 0 . Визначте, скільки
#  елементів цієї послідовності більше попереднього елемента. Вводиться послідовність цілих чисел,
#  що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її
#  закінчення).
#  Вхідні дані:
# 4
#  3
#  6
#  8
#  0
#  Вихідні дані:
#  2
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  283. Послідовність складається з цілих чисел і закінчується номером 0 . Визначте, скільки елементів цієї
#  послідовності більше наступного елемента. Вводиться послідовність цілих чисел, що закінчується
#  числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
#  Гарантується, що послідовність містить як мінімум два числа.
#  Вхідні дані:
#  2
#  9
#  1
#  4
#  3
#  0
#  Вихідні дані:
#  2
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  284. Послідовність складається з натуральних чисел і завершується числом 0 . Визначте, скільки
#  елементів цієї послідовності рівні її найбільшому елементу. Вводиться послідовність цілих чисел, що
#  закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її
#  закінчення).
#  Вхідні дані:
#  3
#  8
#  10
#  2
#  10
#  7
#  0
# Вихідні дані:
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  285. Послідовність складається з різних натуральних чисел і завершується числом 0. Визначте значення
#  другого за величиною елемента в цій послідовності. Вводиться послідовність цілих чисел, що
#  закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її
#  закінчення). Гарантується, що в послідовності є хоча б два елементи.
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  286. Послідовність складається з натуральних чисел і завершується числом 0. Визначте індекс
#  найбільшого елемента послідовності. Якщо найбільших елементів декілька, виведіть індекс першого
#  з них. Нумерація елементів починається з нуля. Вводиться послідовність цілих чисел, що
#  закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її
#  закінчення).
#  Вхідні дані:
#  Вихідні дані:
#  2
#  1
#  4
#  3
#  2
#  0
#  3
#  4
#  2
#  6
#  9
#  5
#  0
#  3
# Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  287. Дано послідовність ненульових цілих чисел, яка завершується нулем (саме число 0 в послідовність
#  не входить, а використовується як ознака її закінчення). Необхідно обчислити скільки разів в цій
#  послідовності змінюється знак (наприклад, в послідовності 10, -4, 12, 56, -4 знак змінюється 3
#  рази).
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  288. Дано послідовність натуральних чисел, що завершується числом 0. Визначте найбільше число
#  елементів цієї послідовності, що йдуть підряд один за одним, і дорівнюють один одному. Вводиться
#  послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а
#  використовується як ознака її закінчення). Додаткове завдання: виведіть найбільш повторюваний
#  елемент послідовності.
#  Вхідні дані:
#  Вихідні дані:-5-3
#  10
#  6-4
#  7-1
#  0
#  4
#  1
#  5
#  5
#  4
#  3
#  9
#  9
#  9
#  7
#  0
#  3
# Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  289. Скласти програму для графічного зображення подільності чисел від 1 до n (значення n вводиться з
#  клавіатури). У кожному рядку треба надрукувати чергове число і стільки символів + , скільки є
#  дільників у цього числа.
#  Вхідні дані:
#  5
#  Вихідні дані:
#  1+
#  2++
#  3++
#  4+++
#  5++
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  290. Дано натуральне число n. Визначити номер деякої заданої цифри d в ньому, відраховуючи від
#  кінця числа. Якщо такої цифри немає, відповіддю має бути число 0; якщо таких цифр в числі кілька,
#  повинен бути визначений номер позиції найправішої з них.
#  Вхідні дані:
#  1233572
#  3
#  Вихідні дані:
#  4
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  291. Вводиться ціле число n . Вивести число, зворотне по порядку складових його цифр.
#  Вхідні дані:
#  125
#  123456789
#  1
# Вихідні дані:
#  521
#  987654321
#  1
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  292. Назвемо число паліндромом, якщо воно не змінюється при перестановці його цифр у зворотному
#  порядку. Напишіть програму, яка за введеним користувачем числом n (1 ≤ n ≤ 100000 ) виводить
#  числа-паліндроми, які не перевищують n .
#  Вхідні дані:
#  50
#  Вихідні дані:
#  1
#  2
#  3
#  4
#  5
#  6
#  7
#  8
#  9
#  11
#  22
#  33
#  44
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  293. Назвемо число паліндромом, якщо воно не змінюється при перестановці його цифр у зворотному
#  порядку. Напишіть програму, яка за введеною користувачем кількістю n (1 ≤ n ≤ 100000 ) виводить
#  кількість таких чисел-паліндромів, які не перевищують n .
#  Вхідні дані:
#  1
#  50
#  10
#  Вихідні дані:
# 1
#  13
#  9
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  294. Дано два чотирицифрових числа a і b. Виведіть усі чотирицифрові числа на відрізку від a до b, які
#  є паліндромами (читаються однаково як зліва направо, так і справа наліво).
#  Вхідні дані:
#  1400
#  2200
#  Вихідні дані:
#  1441
#  1551
#  1661
#  1771
#  1881
#  1991
#  2002
#  2112
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  295. Вводяться два чотирицифрових числа a і b. Виведіть у порядку зростання всі чотирицифрові числа
#  в інтервалі від a до b, запис яких містить тільки три однакові цифри.
#  Вхідні дані:
#  1400
#  1600
#  Вихідні дані:
#  1411
#  1444
#  1511
#  1555
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
# 296. Для настільної гри використовуються картки з номерами від 1 до n. Одна картка загубилася.
#  Знайдіть її, знаючи номери решти карток. Користувач вводить ціле число n , далі n-1 номери решти
#  карток (різні числа від 1 до n). Програма повинна вивести номер втраченої картки.
#  Вхідні дані:
#  5
#  3
#  4
#  1
#  5
#  Вихідні дані:
#  2
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  297. Оленка вчиться ділити з залишком. Вона взяла деяке число, розділила його на 2 і відкинула
#  залишок. Те, що вийшло, розділила на 3 та знову відкинула залишок. Отримане число вона
#  розділила на 4, відкинула залишок і отримала число k. Яке число могла вибрати Оленка спочатку?
#  Вводиться натуральне число k , що не перевершує 1000. Необхідно вивести усі можливі числа, які
#  могла б вибрати спочатку Оленка, за зростанням, розділяючи їх пропусками.
#  Вхідні дані:
#  1
#  Вихідні дані:
#  24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  298. Скільки всього натуральних чисел складаються з не менш ніж a цифр і не більше, ніж b цифр?
#  Вводяться два довільних натуральних числа a і b в окремих рядках. Виведіть одне число: кількість
#  чисел, що володіють зазначеними властивостями.
#  Вхідні дані:
# 1
#  2
#  1
#  1
#  Вихідні дані:
#  99
#  9
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  299. Дано натуральне число n (n ≤ 1000). Скласти програму для перевірки чи ділиться ціле число на
#  кожну з його цифр без залишку. Надрукувати такі числа в інтервалі від 10 до n в порядку
#  зростання, через пропуск.
#  Вхідні дані:
#  100
#  40
#  20
#  Вихідні дані:
#  11 12 15 22 24 33 36 44 48 55 66 77 88 99
#  11 12 15 22 24 33 36
#  11 12 15
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  300. В одній країні використовуються грошові купюри номіналом в 1 , 2, 4, 8, 16, 32 і 64. Дано
#  натуральне число n. Якою найменшою кількістю таких грошових знаків можна виплатити суму n
#  (вказати кількість кожної з використовуваних для виплати купюр)? Передбачається, що є досить
#  велика кількість купюр всіх номіналів.
#  Вхідні дані:
#  165
#  Вихідні дані:
#  2 (64)
#  1 (32)
#  1 (4)
#  1 (1)
# Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  301. Задумали два натуральних числа x і y (x, y ≤ 1000). Щоб відгадати ці числа, називають суму цих
#  чисел a і їх добуток b. Відгадайте ці числа і виведіть їх в порядку зростання, розділяючи пропуском.
#  Вхідні дані:
#  12
#  20
#  6
#  8
#  Вихідні дані:
#  2 10
#  2 4
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  302. Надрукувати всі непарні числа з інтервалу [a, b] ( a ≥ b ). Розглянути варіант програми без
#  використання інструкції розгалуження.
#  Вхідні дані:
#  10
#  1
#  Вихідні дані:
#  9 7 5 3 1
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ
#  303. Надрукувати всі парні числа з інтервалу [a, b] ( a ≤ b ). Розглянути варіант програми без
#  використання інструкції розгалуження.
#  Вхідні дані:
#  1
#  20
#  Вихідні дані:
# 2 4 6 8 10 12 14 16 18 20
#  Розділ: ЦИКЛИ | Рівень складності: ВИСОКИЙ

# ********************************STRING*****************************

# 379. Дано послідовність символів довжини n (n ≥ 1 ). Перевірити баланс круглих дужок в цьому виразі
#  (кожна відкита дужка має свою закриту дужку). Наприклад, при введенні виразу (()) () програма
#  повинна повідомити про правильність розстановки дужок (True ), а при введенні виразу ((()) - про
#  неправильність ( False ). Напишіть програму, яка може перевіряти баланс дужок в арифметичних
#  виразах, тексті і т. д.
#  Вхідні дані:
#  (3y + 21)(12 - (x + 5))
#  (61x + 15(y + 2)
#  Вихідні дані:
#  True
#  False
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  380. Дано рядок, що складається з n цифр (тобто одноцифрових чисел), між якими стоїть n-1 знаків
#  операцій, кожна з яких може бути або +, або -. Обчисліть значення цього виразу. Програма має
#  надрукувати результат обчислення цього виразу.
#  Вхідні дані:
#  5-3+1
#  6+3-2
#  Вихідні дані:
#  3
#  7
# Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  381. Капітан Флінт закопав скарб на Острові скарбів. Він залишив опис, як знайти скарб. Опис складається
#  з рядків виду: North 5, де перше слово - одне з North, South, East, West, а друге число - кількість
#  кроків, яку потрібно пройти в цьому напрямку. Напишіть програму, яка за описом шляху до скарбу
#  визначає точні координати скарбу, вважаючи, що початок координат знаходиться на початку шляху,
#  вісь OX спрямована на схід, вісь OY - на північ. Програма отримує на вхід послідовність рядків
#  зазначеного виду, а введення завершується рядком зі словом Treasure!. Програма має вивести два
#  цілих числа в один рядок з пропуском між ними - координати скарбу.
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  382. Напишіть програму, на вхід якої даються чотири числа a, b, c і d, кожне у своєму рядку. Програма
#  повинна вивести фрагмент таблиці множення для всіх чисел відрізка [a; b] на всі числа відрізка
#  [c; d]. Числа a, b, c і d є натуральними і не перевищують 10, a ≤ b, c ≤ d. Дотримуйтесь
#  формату виведення як у вихідних даних. Для поділу елементів всередині рядка використовуйте \t 
# символ табуляції. Зауважте, що лівим стовпчиком і верхнім рядком виводяться самі числа із заданих
#  відрізків.
#  Вхідні дані:
#  Вихідні дані:
#  North 5
#  East 3
#  South 1
#  Treasure!
#  3 4
#  1
#  4
#  2
#  5
#  2 3 4 5
#  1 2 3 4 5
#  2 4 6 8 10
#  3 6 9 12 15
#  4 8 12 16 20
# Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  383. Напишіть програму для друку літери A за допомогою введеного користувачем символа.
#  Вхідні дані:
#  *
#  Вихідні дані:
#  ***
#  *   
# *   
# *
#  *
#  *****
#  *   
# *
#  *   
# *   
# *
#  *
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  384. Напишіть програму для друку літери M за допомогою введеного користувачем символа.
#  Вхідні дані:
#  %
#  Вихідні дані:
#  %   
# %   
# %
#  %
#  %% %%
#  % % %
#  %   
# %
#  %   
# %   
# %
#  %
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  385. Дано рядок, що є параграфом в тексті. Текст необхідно відформатувати так, щоб довжина кожного
#  рядка не перевищувала числа m, слова при цьому не розривати. На вхід програмі спочатку
#  подається число m (0 < m ≤ 255 ). У наступному рядку знаходиться вхідний текст. Довжина слів в
#  ньому не перевищує m, слова розділені рівно одним пропуском. Виведіть розбиття цього тексту на
#  рядки довжиною не більше ніж m символів (слово переноситься на наступний рядок тільки якщо в
#  поточному рядку його розмістити вже неможливо). Новий рядок не повинен починатися з пропуску.
# Вхідні дані:
#  10
#  The Wonderful Wizard of Oz
#  Вихідні дані:
#  The
#  Wonderful
#  Wizard of
#  Oz
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  386. Послідовності із символів 0 і 1 називаються бінарними. Вони широко застосовуються в
#  інформатиці. Одне з незручностей бінарних послідовностей – їх важко запам’ятовувати. Для
#  вирішення цієї проблеми був запропонований такий спосіб їх стиснення: переглядаючи
#  послідовність зліва направо, виконується заміна 1 на a , 01 на b, 001 на c, ...,
#  00000000000000000000000001 на z . Напишіть програму, яка допоможе автоматизувати такий
#  процес заміни.
#  Вхідні дані:
#  1111
#  1001101
#  10000101
#  Вихідні дані:
#  aaaa
#  acab
#  aeb
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  387. Напишіть програму, яка зчитує рядок, кодує її запропонованим алгоритмом і виводить закодовану
#  послідовність. Кодування повинно враховувати регістр символів. Правила кодування: групи
#  однакових символів початкового рядка замінюються на цей символ і кількість його повторень в цій
#  позиції рядка. Наприклад: рядок aaaabbbсaa кодується в a4b3с1a2 .
#  Вхідні дані:
#  aaaabbbcaa
#  abc
#  Hello
# Вихідні дані:
#  a4b3c1a2
#  a1b1c1
#  H1e1l2o1
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  388. На вхід програми подається два рядка A і B, що складаються з малих букв англійського алфавіту.
#  Виведіть кількість входжень рядка B в рядок A.
#  Вхідні дані:
#  aaaa
#  a
#  ababada
#  abc
#  abababa
#  aba
#  Вихідні дані:
#  4
#  0
#  3
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  389. Користувач вводить рядок цифр без пропусків. Необхідно написати програму, яка «розіб’є» це число
#  на трійки цифр справа наліво комами. Якщо число містить менше трьох цифр, то воно виводиться
#  без змін.
#  Вхідні дані:
#  4567
#  123
#  2348906
#  Вихідні дані:
#  4,567
#  123
#  2,348,906
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
# 390. Дано слово, що складається лише з малих англійських літер. Визначте, яку найменшу кількість літер
#  потрібно дописати до цього слова праворуч так, щоб воно стало паліндромом.
#  Вхідні дані:
#  NASA
#  Mars
#  Webb
#  Вихідні дані:
#  1
#  3
#  2
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  391. Користувачем вводиться рядок, що містить натуральні цілі числа і слова. Необхідно сформувати
#  новий рядок лише з чисел, розділених комою і пропуском, що містяться у введеному рядку.
#  Вхідні дані:
#  District 9 (2009) - IMDb 8
#  Reviews 1301 user | 478 critic | Popularity 511
#  R | 1h 52min | Sci-Fi, Thriller | 13 August 2009 (Ukraine)
#  Вихідні дані:
#  9, 2009, 8
#  1301, 478, 511
#  1, 52, 13, 2009
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  392. Дано рядок. Знайдіть в цьому рядку найдовше слово і виведіть його. Якщо в рядку кілька слів
#  однакової максимальної довжини, виведіть перше з них.
#  Вхідні дані:
#  The Lord of the Rings: The Two Towers (Adventure, Drama, Fantasy) [2002].
#  The Matrix (Action, Sci-Fi) [1999].
#  WALL-E (Animation, Adventure, Family) [2008].
#  Вихідні дані:
# Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  393. Напишіть програму, яка переводить ціле число N (1 ≤ |N| < 1000000000) з системи числення з
#  основою K (2 ≤ K ≤ 36) в систему числення з основою M (2 ≤ M ≤ 36). Перший вхідний рядок
#  містить запис числа N в системі числення з основою K. Другий рядок містить числа K і M, розділені
#  пропуском. Програма повинна вивести запис числа N в системі числення з основою M.
#  Вхідні дані:
#  Вихідні дані:
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  394. Дано текст і відомо, що він шифрується наступним чином. Спочатку визначається кількість букв k в
#  найдовшому слові (словом називається безперервна послідовність англійських букв, слова один від
#  одного відокремлюються будь-якими іншими символами, довжина слова не перевищує 20
#  символів). Потім кожна англійська літера замінюється на букву, що стоїть в алфавіті на k букв
#  раніше (алфавіт вважається циклічним, тобто перед буквою A стоїть буква Z). Інші символи
#  залишаються незмінними. Малі літери при цьому залишаються малими, а великі - великими.
#  Розшифруйте введений текст.
#  Вхідні дані:
#  Вихідні дані:
#  Adventure
#  Matrix
#  Animation
#  125
#  8 16
#  CD6
#  16 3-AB
#  16 10
#  55
#  11111201-171
#  Njzxwxgd Bpihjbdid, rgtpidg du iwt Gjqn egdvgpbbxcv apcvjpvt.
#  Yukihiro Matsumoto, creator of the Ruby programming language.
# Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  395. Дано рядок, який, можливо, містить пропуски. Визначте кількість слів у цьому рядку. Слово - це
#  кілька поспіль букв англійського алфавіту (як великих, так і малих). При розв’язуванні цього
#  завдання не можна користуватися списками.
#  Вхідні дані:
#  Do you play any sports? Yes, I like to play basketball.
#  Вихідні дані:
#  10
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  396. У заданому рядку знайти найкоротше слово, вивести це слово і його розмір у символах. Слова
#  можуть бути розділені пропусками, декількома пропусками, знаками пунктуації, цифрами тощо.
#  Якщо найкоротших слів є кілька, вивести лише перше з них. Рядок слів гарантовано закінчується
#  крапкою.
#  Вхідні дані:
#  He lives in house number 4.
#  Now is better than never.
#  Tom Tells the Truth.
#  Вихідні дані:
#  He 2
#  is 2
#  Tom 3
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  397. Шифр Цезаря полягає в заміні кожного символу вхідного рядка на символ, що знаходиться на кілька
#  позицій ліворуч або праворуч його в алфавіті. Напишіть програму, яка шифрує текст шифром Цезаря.
#  Використовуваний алфавіт - пропуск і малі літери англійського алфавіту. На першому рядку
#  вказується зміщення шифрування: ціле число. Додатне число відповідає зміщенню вправо. На
#  другому рядку вказується непорожній рядок-фраза для шифрування. Результатом роботи програми
#  має бути записана зашифрована послідовність.
#  Вхідні дані:
# 3
#  i am caesar
#  26
#  abc
#  1
#  Python
#  Вихідні дані:
#  lcdpcfdhvdu
#  abc
#  qzuipo
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  398. Напишіть програму, яка переводить натуральне число N (1 ≤ N ≤ 3999 ) з римської системи
#  числення в десяткову. Вхідний рядок містить число N , записане в римській системі числення.
#  Програма повинна вивести десятковий запис числа N.
#  Вхідні дані:
#  MMMCMXCIX
#  IV
#  XXI
#  Вихідні дані:
#  3999
#  4
#  21
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  399. Кодування довжин послідовностей - це базовий алгоритм стиснення даних. Реалізуйте один з
#  найпростіших його варіантів. На вхід алгоритму подається рядок, що містить символи англійського
#  алфавіту. Цей рядок розбивається на групи однакових символів, що йдуть підряд («серії»). Кожна
#  серія характеризується символом і кількістю повторень. Саме ця інформація і записується в код:
#  спочатку пишеться довжина серії повторюваних символів, потім сам символ. У серій довжиною в
#  один символ кількість повторень не записується.
#  Вхідні дані:
#  aaabccccCCaB
#  aabcccddffffffffff
#  Вихідні дані:
# 3ab4c2CaB
#  2ab3c2d10f
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  400. Дано рядок, який може містити пропуски. Визначте, чи є цей рядок паліндромом, за умови, що
#  великі і малі літери не розрізняються, а всі символи, які не є буквами, повинні бути пропущені.
#  Виведіть слово Yes , якщо слово є паліндромом і слово No, якщо ні. Довжина вхідного рядка може
#  бути до 100000 символів. При виконанні цього завдання не можна використовувати списки.
#  Вхідні дані:
#  Was.it.a.rat.I.saw?
#  Rio-de-Janeiro!
#  a+b=b+a
#  Вихідні дані:
#  Yes
#  No
#  Yes
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИЙ
#  401. Дано рядок, що містить одне або більше цілих чисел від 0 до 1000000000, розділених знаками + або- . Розрахуйте значення цього виразу.
#  Вхідні дані:
#  12-5+3
#  26-14+2-1
#  7-0+3
#  Вихідні дані:
#  10
#  13
#  10
#  Розділ: РОБОТА З РЯДКАМИ | Рівень складності: ВИСОКИ